{"version":3,"sources":["Dashboard.jsx","Card.jsx","Button.jsx","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","props","title","children","any","className","contentEditable","Card","data","description","onClick","e","target","parentElement","remove","Button","App","useState","cards","setData","handleAddCard","event","newData","parentNode","id","push","map","item","index","cardItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAaeA,MAXf,SAAmBC,GAAQ,IAClBC,EAA2BD,EAA3BC,MAAOC,EAAoBF,EAApBE,SAAaC,EADH,YACUH,EADV,sBAGtB,OACC,8CAAKI,UAAU,uBAA0BD,GAAzC,cACC,oBAAIE,iBAAe,EAACD,UAAU,iBAA9B,SAAgDH,IAC/CC,OCUQI,MAhBf,SAAcN,GAAQ,IACdO,EAAgBP,EAAhBO,KAASJ,EADI,YACGH,EADH,UAOnB,OACE,8CAAKI,UAAU,kBAAqBD,GAApC,cACE,oBAAIE,iBAAe,EAACD,UAAU,YAA9B,SAA2CG,EAAKN,QAChD,qBAAKI,iBAAe,EAACD,UAAU,mBAA/B,SAAmDG,EAAKC,cAC3D,wBAAQJ,UAAU,kBAAkBK,QARtC,SAAoBC,GAClBA,EAAEC,OAAOC,cAAcC,UAOvB,oBCZY,SAASC,EAAOd,GAAQ,IAC9BE,EAAoBF,EAApBE,SAAaC,EADgB,YACTH,EADS,cAGpC,OAAO,kDAAYG,GAAZ,aAAkBD,KCgDZa,MA5Cf,WAAgB,IAAD,EACWC,mBAAS,CAAC,CAChCf,MAAO,qBACPgB,MAAO,MAHI,mBACNV,EADM,KACAW,EADA,KAcb,SAASC,EAAcC,GAErB,IAAIC,EAAO,YAAOd,GAElBc,EAAQD,EAAMT,OAAOW,WAAWC,IAAIN,MAAMO,KAAK,CAC7CvB,MAAO,OACPO,YAAa,gBAGfU,EAAQG,GAGV,OACE,sBAAKjB,UAAU,YAAf,UACE,6CACA,sBAAKA,UAAU,UAAf,UACGG,EAAKkB,KAAI,SAACC,EAAMC,GAAP,OACR,eAAC,EAAD,CAAW1B,MAAOyB,EAAKzB,MAAOsB,GAAII,EAAlC,UACGD,EAAKT,MAAMQ,KAAI,SAACG,EAAUD,GAAX,OACd,cAAC,EAAD,CAAMpB,KAAMqB,GAAe,OAASD,MAErC,cAACb,EAAD,CAAQV,UAAU,UAAUK,QAASU,EAArC,qBAGL,cAACL,EAAD,CAAQV,UAAU,eAAeK,QAhCvC,WACES,EAAQ,GAAD,mBAAKX,GAAL,CAAW,CAChBN,MAAO,qBACPgB,MAAO,QA6BL,sBClCOY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6585f422.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Dashboard(props) {\r\n  const {title, children, ...any} = props;\r\n\r\n    return (\r\n     <div className=\"dashboard-container\" {...any}>\r\n      <h1 contentEditable className=\"dashboard-name\">{title}</h1>        \r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","import React from \"react\";\r\n\r\nfunction Card(props) {\r\n\tconst {data, ...any} = props;\r\n\t\t\r\n\tfunction deleteCard(e) {\r\n\t\t\te.target.parentElement.remove();\r\n\t}\r\n \r\n  return (\r\n    <div className=\"card-container\" {...any}>\r\n      <h2 contentEditable className=\"card-name\">{data.title}</h2>\r\n      <div contentEditable className=\"card-description\">{data.description}</div>\r\n\t\t\t<button className=\"card-del-button\" onClick={deleteCard}>x</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","\r\nexport default function Button(props) {\r\n  const {children, ...any} = props;\r\n\r\n  return <button {...any}>{children}</button>;\r\n}","import './App.css';\r\nimport Dashboard from \"./Dashboard\";\r\nimport Card from \"./Card\";\r\nimport Button from \"./Button\";\r\n// import Form from \"./Form\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([{\r\n    title: \"Untitled dashboard\",\r\n    cards: []\r\n  }]);\r\n\r\n  function handleAddDashboard() {\r\n    setData([...data, {\r\n      title: \"Untitled dashboard\",\r\n      cards: []\r\n    }\r\n    ]);\r\n  }\r\n\r\n  function handleAddCard(event) {\r\n\r\n    let newData = [...data];\r\n\r\n    newData[event.target.parentNode.id].cards.push({\r\n      title: \"Card\",\r\n      description: \"Description\"\r\n    });\r\n\r\n    setData(newData);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Your ToDo's</h1>\r\n      <div className=\"todoApp\">\r\n        {data.map((item, index) =>\r\n          <Dashboard title={item.title} id={index}>\r\n            {item.cards.map((cardItem, index) =>\r\n              <Card data={cardItem} key={\"card\" + index} />\r\n            )}\r\n            {<Button className=\"cardAdd\" onClick={handleAddCard}>+</Button>}\r\n          </Dashboard>\r\n        )}\r\n        <Button className=\"dashboardAdd\" onClick={handleAddDashboard}>+</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}